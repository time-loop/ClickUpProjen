// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClickUpTypeScriptProject defaults .github/workflows/upgrade-main.yml 1`] = `undefined`;

exports[`ClickUpTypeScriptProject defaults .mergify.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

queue_rules:
  - name: default
    conditions:
      - \\"#approved-reviews-by>=1\\"
      - -label~=(do-not-merge)
      - status-success=build
pull_request_rules:
  - name: Automatic merge on approval and successful build
    actions:
      delete_head_branch: {}
      queue:
        method: squash
        name: default
        commit_message_template: |-
          {{ title }} (#{{ number }})

          {{ body }}
    conditions:
      - \\"#approved-reviews-by>=1\\"
      - -label~=(do-not-merge)
      - status-success=build
"
`;

exports[`ClickUpTypeScriptProject defaults codecov.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

coverage:
  precision: 2
  round: down
  status:
    project:
      default:
        target: auto
        threshold: 10%
        paths:
          - src
        if_ci_failed: error
        only_pulls: true
    patch:
      default:
        base: auto
        target: auto
        threshold: 10%
        paths:
          - src
        if_ci_failed: error
        only_pulls: true
parsers:
  gcov:
    branch_detection:
      conditional: yes
      loop: yes
      method: no
      macro: no
comment:
  layout: reach,diff,flags,files,footer
  behavior: default
  require_changes: no
"
`;

exports[`ClickUpTypeScriptProject defaults package.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "author": Object {
    "name": "ClickUp",
    "organization": true,
  },
  "dependencies": Object {
    "@time-loop/clickup-projen": "*",
  },
  "devDependencies": Object {
    "@types/jest": "^27",
    "@types/node": "^14",
    "@typescript-eslint/eslint-plugin": "^5",
    "@typescript-eslint/parser": "^5",
    "esbuild": "*",
    "eslint": "^8",
    "eslint-config-prettier": "*",
    "eslint-import-resolver-node": "*",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "eslint-plugin-prettier": "*",
    "jest": "^27",
    "jest-junit": "^13",
    "jsii-release": "*",
    "json-schema": "*",
    "npm-check-updates": "^15",
    "prettier": "*",
    "projen": "*",
    "standard-version": "^9",
    "ts-jest": "^27",
    "ts-node": "^10",
    "typedoc": "*",
    "typedoc-plugin-markdown": "*",
    "typescript": "*",
  },
  "engines": Object {
    "node": ">= 14.18.0",
  },
  "jest": Object {
    "clearMocks": true,
    "collectCoverage": true,
    "collectCoverageFrom": Array [
      "src/**/*.ts",
    ],
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "coverageReporters": Array [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "globals": Object {
      "ts-jest": Object {
        "tsconfig": "tsconfig.dev.json",
      },
    },
    "preset": "ts-jest",
    "reporters": Array [
      "default",
      Array [
        "jest-junit",
        Object {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": Array [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/(test|src)/**/*(*.)@(spec|test).ts?(x)",
    ],
    "testPathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "watchPathIgnorePatterns": Array [
      "/node_modules/",
    ],
  },
  "license": "UNLICENSED",
  "main": "lib/index.js",
  "name": "@time-loop/test",
  "publishConfig": Object {
    "registry": "https://npm.pkg.github.com/",
  },
  "scripts": Object {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "release": "npx projen release",
    "test": "npx projen test",
    "test:update": "npx projen test:update",
    "test:watch": "npx projen test:watch",
    "typedocDocgen": "npx projen typedocDocgen",
    "unbump": "npx projen unbump",
    "upgrade": "npx projen upgrade",
    "watch": "npx projen watch",
  },
  "types": "lib/index.d.ts",
  "version": "0.0.0",
}
`;
