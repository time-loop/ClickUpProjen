// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClickUpTypeScriptProject defaults .github/workflows/upgrade-main.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: upgrade-main
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * 1
jobs:
  upgrade:
    name: Upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      patch_created: \${{ steps.create_patch.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: GitHub Packages authorization
        run: |-
          cat > .npmrc <<EOF
          //npm.pkg.github.com/:_authToken=\${{ secrets.ALL_PACKAGE_READ_TOKEN }}
          @time-loop:registry=https://npm.pkg.github.com/
          EOF
      - name: Make cdk-ecr-deployment sane
        run: export FORCE_PREBUILT_LAMBDA=1
      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 14.17.0
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Upgrade dependencies
        run: npx projen upgrade
      - id: create_patch
        name: Find mutations
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo \\"::set-output name=patch_created::true\\"
      - if: steps.create_patch.outputs.patch_created
        name: Upload patch
        uses: actions/upload-artifact@v2
        with:
          name: .repo.patch
          path: .repo.patch
  pr:
    name: Create Pull Request
    needs: upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: \${{ needs.upgrade.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: \${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: main
      - name: Download patch
        uses: actions/download-artifact@v3
        with:
          name: .repo.patch
          path: \${{ runner.temp }}
      - name: Apply patch
        run: '[ -s \${{ runner.temp }}/.repo.patch ] && git apply \${{ runner.temp }}/.repo.patch || echo \\"Empty patch. Skipping.\\"'
      - name: Set git identity
        run: |-
          git config user.name \\"github-actions\\"
          git config user.email \\"github-actions@github.com\\"
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          token: \${{ secrets.PROJEN_GITHUB_TOKEN }}
          commit-message: |-
            chore(deps): upgrade dependencies

            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: https://github.com/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

            ------

            *Automatically created by projen via the \\"upgrade-main\\" workflow*
          branch: github-actions/upgrade-main
          title: \\"chore(deps): upgrade dependencies\\"
          body: |-
            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: https://github.com/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

            ------

            *Automatically created by projen via the \\"upgrade-main\\" workflow*
          author: github-actions <github-actions@github.com>
          committer: github-actions <github-actions@github.com>
          signoff: true
"
`;

exports[`ClickUpTypeScriptProject defaults .mergify.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

queue_rules:
  - name: default
    conditions:
      - \\"#approved-reviews-by>=1\\"
      - -label~=(do-not-merge)
      - status-success=build
pull_request_rules:
  - name: Automatic merge on approval and successful build
    actions:
      delete_head_branch: {}
      queue:
        method: squash
        name: default
        commit_message_template: |-
          {{ title }} (#{{ number }})

          {{ body }}
    conditions:
      - \\"#approved-reviews-by>=1\\"
      - -label~=(do-not-merge)
      - status-success=build
"
`;

exports[`ClickUpTypeScriptProject defaults codecov.yml 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

coverage:
  precision: 2
  round: down
  status:
    project:
      default:
        target: auto
        threshold: 10%
        paths:
          - src
        if_ci_failed: error
        only_pulls: true
    patch:
      default:
        base: auto
        target: auto
        threshold: 10%
        paths:
          - src
        if_ci_failed: error
        only_pulls: true
parsers:
  gcov:
    branch_detection:
      conditional: yes
      loop: yes
      method: no
      macro: no
comment:
  layout: reach,diff,flags,files,footer
  behavior: default
  require_changes: no
"
`;

exports[`ClickUpTypeScriptProject defaults package.json 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "author": Object {
    "name": "ClickUp",
    "organization": true,
  },
  "dependencies": Object {
    "@time-loop/clickup-projen": "*",
  },
  "devDependencies": Object {
    "@types/jest": "^27",
    "@types/node": "^14",
    "@typescript-eslint/eslint-plugin": "^5",
    "@typescript-eslint/parser": "^5",
    "esbuild": "*",
    "eslint": "^8",
    "eslint-config-prettier": "*",
    "eslint-import-resolver-node": "*",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "eslint-plugin-prettier": "*",
    "jest": "^27",
    "jest-junit": "^13",
    "jsii-release": "*",
    "json-schema": "*",
    "npm-check-updates": "^15",
    "prettier": "*",
    "projen": "*",
    "standard-version": "^9",
    "ts-jest": "^27",
    "ts-node": "^10",
    "typescript": "*",
  },
  "engines": Object {
    "node": ">= 14.17.0",
  },
  "jest": Object {
    "clearMocks": true,
    "collectCoverage": true,
    "collectCoverageFrom": Array [
      "src/**/*.ts",
    ],
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "coverageReporters": Array [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "globals": Object {
      "ts-jest": Object {
        "tsconfig": "tsconfig.dev.json",
      },
    },
    "preset": "ts-jest",
    "reporters": Array [
      "default",
      Array [
        "jest-junit",
        Object {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": Array [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/(test|src)/**/*(*.)@(spec|test).ts?(x)",
    ],
    "testPathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "watchPathIgnorePatterns": Array [
      "/node_modules/",
    ],
  },
  "license": "UNLICENSED",
  "main": "lib/index.js",
  "name": "@time-loop/test",
  "publishConfig": Object {
    "registry": "https://npm.pkg.github.com/",
  },
  "scripts": Object {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "release": "npx projen release",
    "test": "npx projen test",
    "test:update": "npx projen test:update",
    "test:watch": "npx projen test:watch",
    "unbump": "npx projen unbump",
    "upgrade": "npx projen upgrade",
    "watch": "npx projen watch",
  },
  "types": "lib/index.d.ts",
  "version": "0.0.0",
}
`;
