// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addCdkDiffWorkflowYml file added 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: cdk-diff
on:
  pull_request: {}
  workflow_dispatch: {}
permissions:
  id-token: write
  contents: write
  pull-requests: write
jobs:
  diff:
    runs-on: ubuntu-latest
    env:
      CI: \\"true\\"
      GITHUB_PR_NUMBER: \${{github.event.pull_request.number}}
      REPO_NAME: \${{ github.event.repository.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: \${{ github.event.pull_request.head.ref }}
          repository: \${{ github.event.pull_request.head.repo.full_name }}
      - name: GitHub Packages authorization
        run: |-
          cat > .npmrc <<EOF
          //npm.pkg.github.com/:_authToken=\${{ secrets.ALL_PACKAGE_READ_TOKEN }}
          @time-loop:registry=https://npm.pkg.github.com/
          EOF
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Install dependencies
        run: yarn install --check-files
      - name: ls stacks in each env
        run: |
          ./node_modules/.bin/cdk ls -l -j > cdk-ls.json
          QA_STACKS=$(jq -r '[.[].id | select(contains(\\"Qa\\")) ] | join(\\" \\")' cdk-ls.json)
          STG_STACKS=$(jq -r '[.[].id | select(contains(\\"Staging\\")) ] | join(\\" \\")' cdk-ls.json)
          PROD_STACKS=$(jq -r '[.[].id | select(contains(\\"Prod\\")) ] | join(\\" \\")' cdk-ls.json)
          echo \\"QA_STACKS=$QA_STACKS\\" >> $GITHUB_ENV
          echo \\"STG_STACKS=$STG_STACKS\\" >> $GITHUB_ENV
          echo \\"PROD_STACKS=$PROD_STACKS\\" >> $GITHUB_ENV
      - name: configure qa aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: squad-github-actions-oidc-role-name-qa
          role-duration-seconds: 900
          aws-region: us-west-2
      - name: diff qa
        run: |
          set -o pipefail
          ./node_modules/.bin/cdk diff $QA_STACKS --progress=events --staging false -e --ignore-errors --version-reporting false &> >(tee cdk-qa.log)
          ./node_modules/.bin/ts-node ./node_modules/@time-loop/cdk-log-parser/lib/cdkLogParser.js cdk-qa.log && echo 'QA_HAS_NO_DIFF=true' >> $GITHUB_ENV
      - name: configure staging aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: squad-github-actions-oidc-role-name-staging
          role-duration-seconds: 900
          aws-region: us-west-2
      - name: diff staging
        run: |
          set -o pipefail
          ./node_modules/.bin/cdk diff $STG_STACKS --progress=events --staging false -e --ignore-errors --version-reporting false &> >(tee cdk-staging.log)
          ./node_modules/.bin/ts-node ./node_modules/@time-loop/cdk-log-parser/lib/cdkLogParser.js cdk-staging.log && echo 'STAGING_HAS_NO_DIFF=true' >> $GITHUB_ENV
      - name: configure prod aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: squad-github-actions-oidc-role-name-prod
          role-duration-seconds: 900
          aws-region: us-west-2
      - name: diff prod
        run: |
          set -o pipefail
          ./node_modules/.bin/cdk diff $PROD_STACKS --progress=events --staging false -e --ignore-errors --version-reporting false &> >(tee cdk-prod.log)
          ./node_modules/.bin/ts-node ./node_modules/@time-loop/cdk-log-parser/lib/cdkLogParser.js cdk-prod.log && echo 'PROD_HAS_NO_DIFF=true' >> $GITHUB_ENV
      - name: cdk-notify
        run: |
          curl -L \\"https://github.com/karlderkaefer/cdk-notifier/releases/download/v2.3.2/cdk-notifier_$(uname)_amd64.gz\\" -o cdk-notifier.gz
          gunzip cdk-notifier.gz && chmod +x cdk-notifier && rm -rf cdk-notifier.gz
          ./cdk-notifier --log-file ./cdk-qa.log --repo $REPO_NAME --owner $GITHUB_REPOSITORY_OWNER --token \${{ secrets.GITHUB_TOKEN }} --pull-request-id \${{ github.event.pull_request.number }} -t 'Qa Stacks'
          ./cdk-notifier --log-file ./cdk-staging.log --repo $REPO_NAME --owner $GITHUB_REPOSITORY_OWNER --token \${{ secrets.GITHUB_TOKEN }} --pull-request-id \${{ github.event.pull_request.number }} -t 'Staging Stacks'
          ./cdk-notifier --log-file ./cdk-prod.log --repo $REPO_NAME --owner $GITHUB_REPOSITORY_OWNER --token \${{ secrets.GITHUB_TOKEN }} --pull-request-id \${{ github.event.pull_request.number }} -t 'Production Stacks'
      - name: Apply qa has no diff label based on diff status
        if: env.QA_HAS_NO_DIFF == 'true'
        uses: actions/github-script@v6
        with:
          github-token: \${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [\\"no-qa-changes\\"]
            })
      - name: Apply staging has no diff label based on diff status
        if: env.STAGING_HAS_NO_DIFF == 'true'
        uses: actions/github-script@v6
        with:
          github-token: \${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [\\"no-staging-changes\\"]
            })
      - name: Apply prod has no diff label based on diff status
        if: env.PROD_HAS_NO_DIFF == 'true'
        uses: actions/github-script@v6
        with:
          github-token: \${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [\\"no-prod-changes\\"]
            })
      - name: Should auto merge
        id: should-auto-merge
        if: env.QA_HAS_NO_DIFF == 'true' && env.STAGING_HAS_NO_DIFF == 'true' && env.PROD_HAS_NO_DIFF == 'true' && github.event.pull_request.user.login == 'cu-infra-svc-git'
        run: echo \\"auto-merge=true\\" >> $GITHUB_OUTPUT
      - name: Enable automerge
        uses: daneden/enable-automerge-action@v1.0.2
        if: steps.should-auto-merge.outputs.auto-merge
        with:
          github-token: \${{ secrets.PROJEN_GITHUB_TOKEN }}
          merge-method: SQUASH
          allowed-author: cu-infra-svc-git
      - name: Auto approve
        uses: hmarr/auto-approve-action@v2.2.1
        if: steps.should-auto-merge.outputs.auto-merge
        with:
          github-token: \${{ secrets.GITHUB_TOKEN }}
"
`;
