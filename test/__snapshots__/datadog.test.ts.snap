// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addReleaseEvent adds additional tags when passed 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"github-actions\\"
          git config user.email \\"github-actions@github.com\\"
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: release
        run: npx projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{ github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: build-artifact
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist
      - name: Release
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q \\"Release.tag_name already exists\\" $errout; then cat $errout; exit $exitcode; fi
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: \${{ github.repository }}
          GITHUB_REF: \${{ github.ref }}
  send_datadog_release_event:
    name: Datadog Release Event
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: \\"true\\"
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist
      - name: Output event metadata
        id: event_metadata
        run: |-
          echo ::set-output name=release_tag::\\"$(cat dist/releasetag.txt)\\"
          echo ::set-output name=repo_name::\\"$(echo \${{ github.repository }} | cut -d'/' -f2)\\"
      - name: Send Event
        uses: Glennmen/datadog-event-action@fb18624879901f1ff0c3c7e1e102179793bfe948
        with:
          datadog_api_key: \${{ secrets.DD_PROJEN_RELEASE_API_KEY }}
          datadog_us: true
          event_title: Released \${{ steps.event_metadata.outputs.repo_name }} version \${{ steps.event_metadata.outputs.release_tag }}
          event_text: Released \${{ steps.event_metadata.outputs.repo_name }} version \${{ steps.event_metadata.outputs.release_tag }}
          event_priority: normal
          event_tags: '[\\"project:test\\",\\"release:true\\",\\"version:\${{ steps.event_metadata.outputs.release_tag }}\\",\\"actor:\${{ github.actor }}\\",\\"TestKey:TestVal\\",\\"TestKey2:TestVal2\\"]'
"
`;

exports[`addReleaseEvent adds job to release workflow 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"github-actions\\"
          git config user.email \\"github-actions@github.com\\"
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: release
        run: npx projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{ github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: build-artifact
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist
      - name: Release
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q \\"Release.tag_name already exists\\" $errout; then cat $errout; exit $exitcode; fi
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: \${{ github.repository }}
          GITHUB_REF: \${{ github.ref }}
  send_datadog_release_event:
    name: Datadog Release Event
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: \\"true\\"
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist
      - name: Output event metadata
        id: event_metadata
        run: |-
          echo ::set-output name=release_tag::\\"$(cat dist/releasetag.txt)\\"
          echo ::set-output name=repo_name::\\"$(echo \${{ github.repository }} | cut -d'/' -f2)\\"
      - name: Send Event
        uses: Glennmen/datadog-event-action@fb18624879901f1ff0c3c7e1e102179793bfe948
        with:
          datadog_api_key: \${{ secrets.DD_PROJEN_RELEASE_API_KEY }}
          datadog_us: true
          event_title: Released \${{ steps.event_metadata.outputs.repo_name }} version \${{ steps.event_metadata.outputs.release_tag }}
          event_text: Released \${{ steps.event_metadata.outputs.repo_name }} version \${{ steps.event_metadata.outputs.release_tag }}
          event_priority: normal
          event_tags: '[\\"project:test\\",\\"release:true\\",\\"version:\${{ steps.event_metadata.outputs.release_tag }}\\",\\"actor:\${{ github.actor }}\\"]'
"
`;

exports[`addReleaseEvent honors overrides 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".

name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: \${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: \\"true\\"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name \\"github-actions\\"
          git config user.email \\"github-actions@github.com\\"
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: release
        run: npx projen release
      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::\\"$(git ls-remote origin -h \${{ github.ref }} | cut -f1)\\"
      - name: Upload artifact
        if: \${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: build-artifact
          path: dist
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist
      - name: Release
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q \\"Release.tag_name already exists\\" $errout; then cat $errout; exit $exitcode; fi
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: \${{ github.repository }}
          GITHUB_REF: \${{ github.ref }}
  send_datadog_release_event:
    name: Datadog Release Event
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: \\"true\\"
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: dist
      - name: Output event metadata
        id: event_metadata
        run: |-
          echo ::set-output name=release_tag::\\"$(cat dist/releasetag.txt)\\"
          echo ::set-output name=repo_name::\\"$(echo \${{ github.repository }} | cut -d'/' -f2)\\"
      - name: Send Event
        uses: Glennmen/datadog-event-action@fb18624879901f1ff0c3c7e1e102179793bfe948
        with:
          datadog_api_key: TEST_API_KEY
          datadog_us: false
          event_title: Test title
          event_text: Test event text
          event_priority: low
          event_tags: '[\\"project:test\\",\\"release:true\\",\\"version:\${{ steps.event_metadata.outputs.release_tag }}\\",\\"actor:\${{ github.actor }}\\",\\"TestTag1:TestTagVal1\\",\\"TestTag2:TestTagVal2\\"]'
"
`;

exports[`addReleaseEvent performs no-op when release option is false 1`] = `undefined`;
